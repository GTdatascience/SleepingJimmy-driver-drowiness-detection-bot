import torch

def driver_detection(img):
    # Model
    model_common = torch.hub.load('ultralytics/yolov5', 'yolov5m', pretrained=True)
    model_common.eval()


    # Inference
    results_common = model_common(img)

    list_with_classes = []
    b = 0
    d = 0
    for i in results_common.crop():
        list_with_classes.append(i['label'].split())
        
        # print(class_and_prob[0])

        print(list_with_classes)
    
    for class_and_prob in list_with_classes:
        
        if 'person' in class_and_prob[:][0]:
            
            
    #         print('–ß–µ–ª–æ–≤–µ–∫ –æ–±–Ω–∞—Ä—É–∂–µ–Ω')
    #         b = 1
    #     else:
    #         if d == 0:
    #             print('–ß–µ–ª–æ–≤–µ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω')
    #             d = 1
            
    
    # if b == 1:
            try:
                model = torch.hub.load('ultralytics/yolov5', 'custom', path='yolov5/best.pt') #force_reload=True
                model.eval()

                drivers_dict = {
                        1:'–í–æ–¥–∏—Ç–µ–ª—å –±–æ–¥—Ä—Å—Ç–≤—É–µ—Çüëç',
                        2: '–í–æ–¥–∏—Ç–µ–ª—å –±–æ–¥—Ä—Å—Ç–≤—É–µ—Çüëç',
                        3: '‚ùóÔ∏è–í–æ–¥–∏—Ç–µ–ª—å –∑–µ–≤–∞–µ—Ç‚ùóÔ∏è', 
                        4: '‚ùóÔ∏è–í–æ–¥–∏—Ç–µ–ª—å –∑–µ–≤–∞–µ—Ç‚ùóÔ∏è', 
                        5: '‚ùóÔ∏è–í–æ–¥–∏—Ç–µ–ª—å —Å–ø–∏—Ç‚ùóÔ∏è', 
                        6: '‚ùóÔ∏è–í–æ–¥–∏—Ç–µ–ª—å –∑–µ–≤–∞–µ—Ç‚ùóÔ∏è', 
                        7: '‚ùóÔ∏è–í–æ–¥–∏—Ç–µ–ª—å –∑–µ–≤–∞–µ—Ç‚ùóÔ∏è', 
                        8: '–í–æ–¥–∏—Ç–µ–ª—å –≤ —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã—Ö –æ—á–∫–∞—Ö, –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–Ω—è—Ç—å', 
                    }

                # Inference
                results = model(img)
                results.save()

                # Results
                # results.show()
                # –ø–æ–ª—É—á–∞–µ–º –ª–∏—Å—Ç –∏–∑ 2 –∑–Ω–∞—á–µ–Ω–∏–π: –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ - –∫–ª–∞—Å—Å, –Ω–∞ –≤—Ç–æ—Ä–æ–º - –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏.
                list_with_class_and_prob = results.crop()[0]['label'].split()

                #–æ–±—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ª–æ–≤–∞—Ä—é –ø–æ –∫–ª–∞—Å—Å—É, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–¥–µ—Ç–µ–∫—Ç–∏–ª–∞ –º–æ–¥–µ–ª—å
                get_class = drivers_dict.get(int(list_with_class_and_prob[0]))

                #–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç–∏ –∫ –∫–ª–∞—Å—Å—É
                reply_msg = f'{get_class}'
                print(reply_msg)
                return reply_msg

            except Exception:
                no_detection = '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å –ª–∏—Ü–æ.'
                return no_detection
    else:
        reply_msg='–ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ –∏–∑–¥–µ–≤–∞—Ç—å—Å—è –Ω–∞–¥ –∂–∏–≤–æ—Ç–Ω—ã–º–∏ - –ø—É—Å—Ç–∏—Ç–µ —á–µ–ª–æ–≤–µ–∫–∞ –∑–∞ —Ä—É–ª—å'
        return reply_msg

# driver_detection('test.jpg')